

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.hibernate.orm' version '6.6.26.Final'
	id 'org.graalvm.buildtools.native' version '0.10.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id "com.github.node-gradle.node" version "7.1.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


node {
	version = '22.12.0'      // pick your Node version
	download = true          // Gradle will fetch a local Node into .gradle
	npmInstallCommand = 'ci'
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly  'org.xerial:sqlite-jdbc:3.46.0.0'
	implementation 'org.komamitsu:spring-data-sqlite:1.3.0' // adds SQLite dialect


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

hibernate {
	enhancement {

	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.register('installPackages', NpmTask) {
	// install the express package only
	args = ['ci']
}

//tasks.register('runDevServer' , NpmTask){
//	dependsOn 'installPackages'
//	args = ['run' , 'dev']
//	workingDir = file('/src/frontend')
//}

tasks.register('buildFrontend' ,NpmTask){
	dependsOn 'installPackages'
	args = ['run','build']
	workingDir = file('/src/frontend')
}

tasks.register('copyToStatic',Copy){
	dependsOn 'buildFrontend'
	from('src/frontend/dist')
	into("build/resources/main/static")
}

tasks.named('processResources') {
	dependsOn 'copyToStatic'
}




